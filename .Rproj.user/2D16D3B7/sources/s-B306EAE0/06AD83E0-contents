# Installation (si nécessaire) et chargement
# install.packages("graphics")  # fait partie de R de base
library(graphics)

# 1. Création de la grille
n <- 100
x1 <- seq(0,1,length.out = n)
x2 <- seq(0,1,length.out = n)
grid <- expand.grid(x1 = x1, x2 = x2)

# 2. Définition des fonctions
f1 <- function(x1,x2) sin(2*pi*x1) + cos(2*pi*x2)
f2 <- function(x1,x2) x1 * x2
f3 <- function(x1,x2) (x1 - 0.5)^2 + (x2 - 0.5)^2
f4 <- function(x1,x2) exp(x1 + x2)
f5 <- function(x1,x2) sin(4*pi*x1*x2)

fs <- list(f1, f2, f3, f4, f5)
titles <- c("sin(2πx1)+cos(2πx2)",
            "x1 * x2",
            "(x1-0.5)^2+(x2-0.5)^2",
            "exp(x1 + x2)",
            "sin(4π x1 x2)")

# 3. Boucle d'ajustement et de tracé
par(mfrow = c(5,2), mar = c(3,3,2,1))
for (i in seq_along(fs)) {
  # Évaluer la vraie fonction
  z_true <- matrix(fs[[i]](grid$x1, grid$x2), n, n)
  
  # Ajuster le modèle linéaire
  df <- data.frame(y = as.vector(z_true), grid)
  lm_fit <- lm(y ~ x1 + x2, data = df)
  z_pred <- matrix(predict(lm_fit, newdata = grid), n, n)
  
  # Tracer la vraie surface
  image(x1, x2, z_true,
        main = paste("Vraie f:", titles[i]),
        xlab = "x1", ylab = "x2")
  
  # Tracer l'approximation linéaire
  image(x1, x2, z_pred,
        main = paste("Prédiction linéaire"),
        xlab = "x1", ylab = "x2")
}
